// <auto-generated />
using System;
using ExaminationApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExaminationApp.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    partial class BookStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExaminationApp.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<int>("PagesCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublishYear")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Джоан Роулинг",
                            Genre = 1,
                            PagesCount = 600,
                            Price = 500m,
                            PublishYear = 2000,
                            Publisher = "Росмэн",
                            Title = "Гарри Поттер и философский камень"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Станислав Лем",
                            Genre = 5,
                            PagesCount = 640,
                            Price = 500m,
                            PublishYear = 2018,
                            Publisher = "АСТ",
                            Title = "Сумма технологий"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Лю Цысинь",
                            Genre = 2,
                            PagesCount = 440,
                            Price = 500m,
                            PublishYear = 2017,
                            Publisher = "Fanzon",
                            Title = "Задача трех тел"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Лю Цысинь",
                            Genre = 2,
                            PagesCount = 650,
                            Price = 500m,
                            PublishYear = 2018,
                            Publisher = "Fanzon",
                            Title = "Темный лес"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Умберто Эко",
                            Genre = 3,
                            PagesCount = 710,
                            Price = 500m,
                            PublishYear = 1980,
                            Publisher = "Corpus",
                            Title = "Имя розы"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Габриэль Гарсия Маркес",
                            Genre = 3,
                            PagesCount = 330,
                            Price = 500m,
                            PublishYear = 2022,
                            Publisher = "Corpus",
                            Title = "Скандал столетия"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Мона Кастен",
                            Genre = 6,
                            PagesCount = 400,
                            Price = 500m,
                            PublishYear = 2023,
                            Publisher = "Like Book",
                            Title = "Снова мечтай"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Джон Скальци",
                            Genre = 2,
                            PagesCount = 380,
                            Price = 500m,
                            PublishYear = 2022,
                            Publisher = "Fanzon",
                            Title = "Бригады призраков"
                        });
                });

            modelBuilder.Entity("ExaminationApp.Entities.SoldBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SellingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoldAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("SoldBooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            SellingDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 1000
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            SellingDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 500
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            SellingDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 10000
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            SellingDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 5000
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            SellingDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 100000
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            SellingDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 10000
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            SellingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 100
                        },
                        new
                        {
                            Id = 8,
                            BookId = 8,
                            SellingDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoldAmount = 1000
                        });
                });

            modelBuilder.Entity("ExaminationApp.Entities.SoldBook", b =>
                {
                    b.HasOne("ExaminationApp.Entities.Book", "Book")
                        .WithMany("SoldBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ExaminationApp.Entities.Book", b =>
                {
                    b.Navigation("SoldBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
